global proc Randomize()
{
    float $distance = `floatField -q -v Distance`;
    float $number = `intField -q -v Number`;
    float $randomScale = `floatField -q -v ScaleRandom`;
    float $randomRotate = `floatField -q -v RotateRandom`;
    string $selection[] = `ls -sl`;
    int $SelectionSize = size( $selection );
    string $groupName = `group -em -n "Duplicated_Objects"`; 
    int $TranslateAxisX = `checkBox -q -v TranslateAxisX`;
    int $TranslateAxisY = `checkBox -q -v TranslateAxisY`;
    int $TranslateAxisZ = `checkBox -q -v TranslateAxisZ`;
    int $RotateAxisX = `checkBox -q -v RotateAxisX `;
    int $RotateAxisY = `checkBox -q -v RotateAxisY `;
    int $RotateAxisZ = `checkBox -q -v RotateAxisZ `;
    int $ScaleAxisX = `checkBox -q -v ScaleAxisX `;
    int $ScaleAxisY = `checkBox -q -v ScaleAxisY `;
    int $ScaleAxisZ = `checkBox -q -v ScaleAxisZ `;   
    int $DuplicateInputGraph = `checkBox -q -v DuplicateInputGraph `;    
    int $InstanceObject = `checkBox -q -v InstanceObjects`;  
    int $UniformScale = `checkBox -q -v UniformScale`;  
    for($j=0;$j<$number;$j++)
    {
        for($i=0;$i<$SelectionSize;$i++)
        { 
            string $object[];
            
            if($InstanceObject==0)
            {
                if($DuplicateInputGraph==1)
                {
                    $object = `duplicate -rr -un $selection[$i]`; 
                }
                else
                {
                    $object = `duplicate -rr $selection[$i]`;
                }
            }
            else
            {
                 $object = `instance $selection[$i]`; 
            }            
            
            float $TranslateRandom[];
            float $RotateRandom[];
            float $ScaleRandom[];
            
            $TranslateRandom[0] = (rand((0-$distance),$distance)) * $TranslateAxisX;
            $TranslateRandom[1] = (rand((0-$distance),$distance)) * $TranslateAxisY;
            $TranslateRandom[2] = (rand((0-$distance),$distance)) * $TranslateAxisZ;
            $RotateRandom[0] = (rand(-$randomRotate,$randomRotate)) * $RotateAxisX;
            $RotateRandom[1] = (rand(-$randomRotate,$randomRotate)) * $RotateAxisY;
            $RotateRandom[2] = (rand(-$randomRotate,$randomRotate)) * $RotateAxisZ;
 
            
            if($ScaleAxisX==1)
            {$ScaleRandom[0] = 1-((rand(0,1))*$randomScale);} else {$ScaleRandom[0]=1;}
            if($ScaleAxisY==1)
            {$ScaleRandom[1] = 1-((rand(0,1))*$randomScale);} else {$ScaleRandom[1]=1;}
            if($ScaleAxisZ==1)
            {$ScaleRandom[2] = 1-((rand(0,1))*$randomScale);} else {$ScaleRandom[2]=1;}
            
            if($UniformScale==1)
            {$ScaleRandom[1]=$ScaleRandom[0];$ScaleRandom[2]=$ScaleRandom[0];}
            
            xform -r -t $TranslateRandom[0] $TranslateRandom[1] $TranslateRandom[2] $object[0];
            xform -r -ro $RotateRandom[0] $RotateRandom[1] $RotateRandom[2] $object[0];
            xform -r -s $ScaleRandom[0] $ScaleRandom[1] $ScaleRandom[2] $object[0];
            
            parent $object[0] $groupName;
        }
    }
}

//any existing gui is deleted to make way for any newly created ones.
if (`window -exists RandomizeObjectsWindow`)
    {deleteUI RandomizeObjectsWindow;}

//Creates Window
window -widthHeight 250 290 -t "Randomize Items" RandomizeObjectsWindow;
rowColumnLayout -numberOfColumns 1;
    rowColumnLayout -numberOfRows 1;
        text -label "Distance";
        floatField -value 50 Distance;
     setParent ..;
    rowColumnLayout -numberOfRows 1;
        text -label "Number";
        intField -value 50 Number;
    setParent ..;
    
    rowColumnLayout -numberOfRows 1;
        text -label "Axis";
        checkBox -label "X" -value 1 TranslateAxisX;
        checkBox -label "Y" -value 0 TranslateAxisY;
        checkBox -label "Z" -value 1 TranslateAxisZ;
    setParent ..;
    
    separator -height 10 -w 240 -style "out";
    
    rowColumnLayout -numberOfRows 1;
        text -label "Rotate Random";
        floatField -value 360 RotateRandom;
    setParent ..;  
    rowColumnLayout -numberOfRows 1;
        text -label "Axis";
        checkBox -label "X" -value 0 RotateAxisX;
        checkBox -label "Y" -value 1 RotateAxisY;
        checkBox -label "Z" -value 0 RotateAxisZ;
    setParent ..;
    
    separator -height 10 -w 240 -style "out";
    
    rowColumnLayout -numberOfRows 1;
        text -label "Scale Random";
        floatField -minValue -0 -maxValue 1 -value 0 ScaleRandom;
    setParent ..;
    
    rowColumnLayout -numberOfRows 1;
        text -label "Axis";
        checkBox -label "X" -value 1 ScaleAxisX;
        checkBox -label "Y" -value 1 ScaleAxisY;
        checkBox -label "Z" -value 1 ScaleAxisZ;
    setParent ..;
    rowColumnLayout -numberOfRows 1;
       text -label "";
        checkBox -label "Uniform Scale" -value 1 UniformScale;
        
    setParent ..;
    
    separator -height 20 -w 240 -style "out";
    
    checkBox -label "Duplicate Input Graph" -value 0 DuplicateInputGraph;
    checkBox -label "Instance Objects" -value 0 InstanceObjects;

separator -height 20 -w 240 -style "out";

button -label "Randomize" -command "Randomize()"; 

showWindow RandomizeObjectsWindow;
