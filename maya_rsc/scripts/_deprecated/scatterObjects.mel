global proc ScatterObjects()
{
    string $selection[] =`ls -sl`;
    int $NumberOfObjects = size($selection);
    
    float $randomScale = `floatField -q -v ScatterScaleRandom`;
    float $randomRotate = `floatField -q -v ScatterRotateRandom`;
    float $distance = `floatField -q -v ScatterDistance`;
    
    int $TranslateAxisX = `checkBox -q -v ScatterTranslateAxisX`;
    int $TranslateAxisY = `checkBox -q -v ScatterTranslateAxisY`;
    int $TranslateAxisZ = `checkBox -q -v ScatterTranslateAxisZ`;
    int $RotateAxisX = `checkBox -q -v ScatterRotateAxisX `;
    int $RotateAxisY = `checkBox -q -v ScatterRotateAxisY `;
    int $RotateAxisZ = `checkBox -q -v ScatterRotateAxisZ `;
    int $ScaleAxisX = `checkBox -q -v ScatterScaleAxisX `;
    int $ScaleAxisY = `checkBox -q -v ScatterScaleAxisY `;
    int $ScaleAxisZ = `checkBox -q -v ScatterScaleAxisZ `;  
    int $UniformScale = `checkBox -q -v ScatterUniformScale`; 
         
    for($i=0;$i<$NumberOfObjects;$i++)
    {        
        float $TranslateRandom[];
        float $RotateRandom[];
        float $ScaleRandom[];
         
        float $TranslateRandom[];
        float $RotateRandom[];
        $TranslateRandom[0] = (rand((0-$distance),$distance)) * $TranslateAxisX;
        $TranslateRandom[1] = (rand((0-$distance),$distance)) * $TranslateAxisY;
        $TranslateRandom[2] = (rand((0-$distance),$distance)) * $TranslateAxisZ;
        $RotateRandom[0] = (rand(-$randomRotate,$randomRotate)) * $RotateAxisX;
        $RotateRandom[1] = (rand(-$randomRotate,$randomRotate)) * $RotateAxisY;
        $RotateRandom[2] = (rand(-$randomRotate,$randomRotate)) * $RotateAxisZ;
            
        if($ScaleAxisX==1)
        {$ScaleRandom[0] = 1-((rand(0,1))*$randomScale);} else {$ScaleRandom[0]=1;}
        if($ScaleAxisY==1)
        {$ScaleRandom[1] = 1-((rand(0,1))*$randomScale);} else {$ScaleRandom[1]=1;}
        if($ScaleAxisZ==1)
        {$ScaleRandom[2] = 1-((rand(0,1))*$randomScale);} else {$ScaleRandom[2]=1;}
            
        if($UniformScale==1)
        {$ScaleRandom[1]=$ScaleRandom[0];$ScaleRandom[2]=$ScaleRandom[0];}
            
         xform -r -t $TranslateRandom[0] $TranslateRandom[1] $TranslateRandom[2] $selection[$i];
         xform -r -ro $RotateRandom[0] $RotateRandom[1] $RotateRandom[2] $selection[$i];
         xform -r -s $ScaleRandom[0] $ScaleRandom[1] $ScaleRandom[2] $selection[$i];
    }
}

//any existing gui is deleted to make way for any newly created ones.
if (`window -exists ScatterObjectsWindow`)
    {deleteUI ScatterObjectsWindow;}

//Creates Window
window -widthHeight 200 240 -t "Scatter Select Objects" ScatterObjectsWindow;
rowColumnLayout -numberOfColumns 1;
    rowColumnLayout -numberOfRows 1;
        text -label "Move Random";
        floatField -value 50 ScatterDistance;
     setParent ..;
    
    rowColumnLayout -numberOfRows 1;
        text -label "Axis";
        checkBox -label "X" -value 1 ScatterTranslateAxisX;
        checkBox -label "Y" -value 1 ScatterTranslateAxisY;
        checkBox -label "Z" -value 1 ScatterTranslateAxisZ;
    setParent ..;
    
    separator -height 10 -w 240 -style "out";
    
    rowColumnLayout -numberOfRows 1;
        text -label "Rotate Random";
        floatField -value 360 ScatterRotateRandom;
    setParent ..;  
    rowColumnLayout -numberOfRows 1;
        text -label "Axis";
        checkBox -label "X" -value 1 ScatterRotateAxisX;
        checkBox -label "Y" -value 1 ScatterRotateAxisY;
        checkBox -label "Z" -value 1 ScatterRotateAxisZ;
    setParent ..;
    
    separator -height 10 -w 240 -style "out";
    
    rowColumnLayout -numberOfRows 1;
        text -label "Scale Random";
        floatField -minValue -0 -maxValue 1 -value 0 ScatterScaleRandom;
    setParent ..;
    
    rowColumnLayout -numberOfRows 1;
        text -label "Axis";
        checkBox -label "X" -value 1 ScatterScaleAxisX;
        checkBox -label "Y" -value 1 ScatterScaleAxisY;
        checkBox -label "Z" -value 1 ScatterScaleAxisZ;
    setParent ..;
    rowColumnLayout -numberOfRows 1;
       text -label "";
        checkBox -label "Uniform Scale" -value 1 ScatterUniformScale;
        
    setParent ..;

separator -height 20 -w 240 -style "out";

button -label "Scatter" -command "ScatterObjects()"; 

showWindow ScatterObjectsWindow;
