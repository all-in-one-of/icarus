global proc LinkCamera()
{
   string $camera  = CameraName();
   setAttr ($camera + ".panZoomEnabled") 1;  
   connectControl ZoomCamAmount ($camera + ".zoom");
   connectControl PanCamXAmount ($camera + ".horizontalPan");
   connectControl PanCamYAmount ($camera + ".verticalPan");
}

global proc ResetCameraZoomOptions()
{
   string $camera  = CameraName();
   setAttr ($camera + ".panZoomEnabled") 1;
   setAttr ($camera + ".horizontalPan") 0;
   setAttr ($camera + ".verticalPan") 0;
   setAttr ($camera + ".zoom") 1;
}

global proc string CameraName()
{
    string $camera;
    string $panel = `getPanel -wf`;
    
    if ( "modelPanel" == `getPanel -to $panel` )
    {
        $camera = `modelEditor -q -camera $panel`;
    }       
    return $camera; 
}


//any existing gui is deleted to make way for any newly created ones.
if (`window -exists PanScanWindow`)
    {deleteUI PanScanWindow;}

//Creates Window
window -widthHeight 480 130 -t "Pan Scan Settings" PanScanWindow;
   
    columnLayout;
    separator -h 10;
        floatSliderGrp -l "ZOOM" -value 1 -field true -pre 3
           -minValue -0 -maxValue 2 -fieldMinValue -0 -fieldMaxValue 100 ZoomCamAmount;
        floatSliderGrp -l "PAN X" -value 0 -field true -pre 3
           -minValue -1.5 -maxValue 1.5 -fieldMinValue -1000 -fieldMaxValue 1000 PanCamXAmount;
        floatSliderGrp -l "PAN Y" -value 0 -field true -pre 3
           -minValue -1.5 -maxValue 1.5 -fieldMinValue -1000 -fieldMaxValue 1000 PanCamYAmount;
    setParent ..;
    
    columnLayout;
        separator -h 10;
        rowLayout -numberOfColumns 3 -columnWidth3 140 50 50;
        separator;
        button -label "RESET" -command "ResetCameraZoomOptions()" ResetButton;
        button -label "LINK CURRENT CAMERA" -command "LinkCamera()" LinkCameraButton;
        setParent ..;
    setParent ..;
       
    showWindow PanScanWindow;
    
