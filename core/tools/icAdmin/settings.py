#!/usr/bin/python

# [Icarus] Title source_filename.py
# v0.1
#
# Mike Bonnington <mike.bonnington@gps-ldn.com>
# (c) 2016 Gramercy Park Studios
#
# Description.


from PySide import QtCore, QtGui
from settings_ui import * # <- import your app's UI file (as generated by pyside-uic)
import os, sys


class SettingsDialog(QtGui.QDialog):

	def __init__(self, parent=None):
		super(SettingsDialog, self).__init__(parent)
		#QtGui.QDialog.__init__(self, parent)
		self.ui = Ui_Dialog()
		self.ui.setupUi(self)

		# Connect signals & slots
#		self.ui.categories_listWidget.currentItemChanged.connect(lambda current: self.openProperties(current.text()))
		# self.ui.categories_listWidget.itemActivated.connect(lambda item: self.openProperties(current.text()))

		# self.ui.settings_buttonBox.button(QtWidgets.QDialogButtonBox.Reset).clicked.connect(self.reset)
		self.ui.settings_buttonBox.button(QtWidgets.QDialogButtonBox.Save).clicked.connect(self.accept)
		self.ui.settings_buttonBox.button(QtWidgets.QDialogButtonBox.Cancel).clicked.connect(self.reject)


	def display(self, 
		        settingsType="Generic", 
		        categoryLs=[], 
		        startPanel=None, 
		        xmlData=None, 
		        inherit=None, 
		        autoFill=False):
		""" Display the dialog.
			'settingsType' is the name given to the settings dialog.
			'categoryLs' is a list of categories, should correspond to a page
			of properties defined by a .ui file.
			'startPanel' if set will jump straight to the named panel.
			'xmlData' is the path to the XML file storing the settings.
			'inherit' whether to inherit any values.
			'autoFill' when true, attempt to fill some fields automatically.
		"""
		self.returnValue = False

		print(type(self), type(self.ui))

		# Declare some global variables
		if startPanel:
			print("Start Panel: " + startPanel)
			self.currentCategory = startPanel
		else:
			self.currentCategory = ""

		self.settingsType = settingsType
		self.categoryLs = categoryLs
		self.xmlData = xmlData
		self.inherit = inherit
		self.autoFill = autoFill

		self.lockUI = True

		# Instantiate XML data classes
		#self.xd = settingsData.settingsData()

#		self.reset()
		self.ui.settings_buttonBox.button(QtGui.QDialogButtonBox.Reset).setEnabled(False)  # temporarily disable the reset button

		#self.ui.setWindowTitle("%s %s" %(settingsType, WINDOW_TITLE))
		self.setWindowTitle("%s %s" %(settingsType, "Settings"))

		self.exec_()
		return self.returnValue
