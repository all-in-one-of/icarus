#!/usr/bin/python

# [Icarus] pDialog.py
#
# Nuno Pereira <nuno.pereira@gps-ldn.com>
# Mike Bonnington <mike.bonnington@gps-ldn.com>
# (c) 2013-2017 Gramercy Park Studios
#
# Launches and controls a generic prompt dialog.


import os
import sys
from Qt import QtCompat, QtCore, QtGui, QtWidgets
import rsc_rc  # Import resource file as generated by pyside-rcc

# Set the UI and the stylesheet
ui_file = "pDialog_ui.ui"
stylesheet = "style.qss"  # Set to None to use the parent app's stylesheet


class dialog(QtWidgets.QDialog):
	""" Main application class.
	"""
	def __init__(self, parent=None):
		super(dialog, self).__init__(parent)

		# Load UI
		self.ui = QtCompat.load_ui(fname=ui_file)
		if stylesheet is not None:
			with open(stylesheet, "r") as fh:
				self.ui.setStyleSheet(fh.read())
		# self.ui.show()


	def dialogWindow(self, dialogMsg, dialogTitle, conf=False, modal=True):
		self.ui.message_textEdit.setText(dialogMsg)
		self.setWindowTitle(dialogTitle)
		self.pDialogReturn = False

		if conf:
			self.ui.buttonBox.button(QtWidgets.QDialogButtonBox.Cancel).hide()
			# self.ui.cancel_pushButton.hide()

		# Connect signals & slots
		self.ui.buttonBox.button(QtWidgets.QDialogButtonBox.Ok).clicked.connect(self.ok)
		self.ui.buttonBox.button(QtWidgets.QDialogButtonBox.Cancel).clicked.connect(self.cancel)
		# QtCore.QObject.connect(self.ui.ok_pushButton, QtCore.SIGNAL("clicked()"), self.ok)
		# QtCore.QObject.connect(self.ui.cancel_pushButton, QtCore.SIGNAL("clicked()"), self.cancel)

		# Qt window flags
		if os.environ['ICARUS_RUNNING_OS'] == 'Darwin':
			self.setWindowFlags(QtCore.Qt.WindowStaysOnTopHint | QtCore.Qt.X11BypassWindowManagerHint | QtCore.Qt.WindowCloseButtonHint)
		else:
			self.setWindowFlags(QtCore.Qt.WindowStaysOnTopHint | QtCore.Qt.WindowCloseButtonHint)

		# Centre window
	#	self.move(QtGui.QDesktopWidget().availableGeometry(1).center() - self.frameGeometry().center())

		if modal:
			self.ui.exec_()
			return self.pDialogReturn
		else:
			self.ui.show()


	def ok(self):
		self.pDialogReturn = True
		self.ui.accept()
		return #True


	def cancel(self):
		self.pDialogReturn = False
		self.ui.accept()
		return #False

