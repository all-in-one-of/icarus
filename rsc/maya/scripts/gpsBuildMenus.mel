// [GPS] Build Menus
//
// Nuno Pereira <nuno.pereira@gps-ldn.com>
// Mike Bonnington <mike.bonnington@gps-ldn.com>
// (c) 2015-2019 Gramercy Park Studios
//
// Dynamically modifies Maya's menus without the need to edit Maya's UI MEL
// scripts directly.


// Get Maya version
float $maya_ver = getApplicationVersionAsFloat();

// This function suppresses recent menus...
global proc checkGPSFileMenu()
{
	$enable = true;

	// Get the recent file list and store it in an array
	python( "from shared import recentFiles" );
	string $fileLs[] = python( "recentFiles.getLs()" );

	// If recent file list contains no entries, disable menu
	if (size($fileLs)==0) $enable = false;
	if (size($fileLs)==1 && $fileLs[0]=="") $enable = false;
	menuItem -edit -enable $enable GPSFileMenuRecentFileItems;

	// Create "Send To" menu items for one-click
	// interop with available applications.
	
	//buildSendToSubMenus;
}


///////////////
// File Menu //
///////////////

string $fileMenu = "MayaWindow|mainFileMenu";
buildFileMenu();
string $fileWindow_menu = `menu -exists $fileMenu`;
menu -edit -postMenuCommand checkGPSFileMenu $fileMenu;

// Delete file open / save menu items
deleteUI -menuItem newProject;
deleteUI -menuItem openProject;
deleteUI -menuItem saveItem;
deleteUI -menuItem saveAsItem;

// Delete project window and set project menu items
deleteUI -menuItem projectWindowFileItem;
deleteUI -menuItem setProjectFileItem;

// Delete recent increments and projects menu items
deleteUI -menuItem FileMenuRecentFileItems;
deleteUI -menuItem FileMenuRecentBackupItems;
deleteUI -menuItem FileMenuRecentProjectItems;

// Delete other unreferenced menu items
for ($item in `menu -ia -q $fileMenu`) {
	string $cmd = `menuItem -q -command $item`;
	string $label = `menuItem -q -label $item`;

	// Menu items by command
	if ($cmd == "IncrementAndSave")
		deleteUI -menuItem $item;

	// Dividers by label
	if ($label == "Project")
		if (`menuItem -q -divider $item`) deleteUI -menuItem $item;
	if ($label == "Recent")
		if (`menuItem -q -divider $item`) deleteUI -menuItem $item;
}

// Add GPS entries
setParent -menu $fileMenu;

	// New Scene
	menuItem -insertAfter ""
			 -label "[GPS] New"
			 -annotation ("Create a new scene")
			 -image "newScene.png"
			 -command ("source menus2Py; menus2Py.newScene()")
			 GPSNewScene;

	// Open Scene
	menuItem -insertAfter GPSNewScene
			 -label "[GPS] Open..."
			 -annotation ("Open a saved scene")
			 -image "openScene.png"
			 -command ("source menus2Py; menus2Py.openScene()")
			 GPSOpenScene;

	// Open Recent Scene
	menuItem -insertAfter GPSOpenScene
			 -subMenu true
			 -label "[GPS] Open Recent"
			 -image "openScene.png"
			 -postMenuCommand "source menus2Py; menus2Py.updateRecentFilesMenu(\"GPSFileMenuRecentFileItems\")"
			 GPSFileMenuRecentFileItems;
	setParent -menu ..;

	if ($maya_ver >= 2016) {
		menuItem -insertAfter GPSFileMenuRecentFileItems
				 -divider true
				 -longDivider false
				 GPSFileDivider1;
	} else {
		menuItem -insertAfter GPSFileMenuRecentFileItems
				 -divider true
				 GPSFileDivider1;
	}

	// Save Scene
	menuItem -insertAfter GPSFileDivider1
			 -label "[GPS] Save"
			 -annotation ("Save the current scene")
			 -image "saveScene.png"
			 -command ("source menus2Py; menus2Py.saveScene()")
			 GPSSaveScene;

	// Save Scene As
	menuItem -insertAfter GPSSaveScene
			 -label "[GPS] Save As..."
			 -annotation ("Save scene with a new name")
			 -image "saveSceneAs.png"
			 -command ("source menus2Py; menus2Py.saveSceneAs()")
			 GPSSaveSceneAs;

	// Incremental Save
	menuItem -insertAfter GPSSaveSceneAs
			 -label "[GPS] Incremental Save"
			 -annotation "Save the current scene as new version"
			 -image "incrementalSave.png"
			 -command ("source menus2Py; menus2Py.incrementalSave()")
			 GPSIncrementalSave;

checkGPSFileMenu();


/////////////////
// Create Menu //
/////////////////

string $createMenu = "MayaWindow|mainCreateMenu";
ModCreateMenu($createMenu);

if ( !`optionVar -exists GPSCreateCameraRig` ) optionVar -iv GPSCreateCameraRig 0;
if ( !`optionVar -exists GPSAddVRayPhysicalCamera` ) optionVar -iv GPSAddVRayPhysicalCamera 0;

setParent -menu $createMenu;
	// Create Cameras menu
	menuItem -insertAfter LightsItem
			 -subMenu true
			 -tearOff true
			 -label "[GPS] Camera Presets"
			 -image "gpsCamera.png"
			 -postMenuCommand "source menus2Py; menus2Py.updatePresetCameraMenu(\"GPSCreatePresetCameraItems\")"
			 GPSCreatePresetCameraItems;
	setParent -menu ..;


/////////////////
// Window Menu //
/////////////////

string $windowMenu = "MayaWindow|mainWindowMenu";
buildViewMenu($windowMenu);
//string $mainWindow_menu = `menu -exists $windowMenu`;
//$mainWindow_menuItems[] = `menu -ia -q $windowMenu`;

// Delete existing menu items
//deleteUI -menuItem playblastItem;

// Add GPS entries
setParent -menu $windowMenu;
	// Replace the existing Playblast menu item with GPS Preview
	menuItem -edit
			 -label ("[GPS] Preview")
			 -command ("source menus2Py; menus2Py.gpsPreviewNoUI()")
			 -annotation ("GPS Preview")
			 -image "gpsPlayblast.png"
			 playblastItem;
	menuItem -edit
			 -command ("source menus2Py; menus2Py.gpsPreview()")
			 -annotation ("Launch GPS Preview UI")
			 playblastDialogItem;

	menuItem -insertAfter playblastItem
			 -divider true
			 GPSWindowDivider1;

	// Launch Icarus UI
	menuItem -insertAfter GPSWindowDivider1
			 -label "Icarus UI..."
			 -annotation ("Launch Icarus UI")
			 -image "icarus.png"
			 -command ("source menus2Py; menus2Py.launchIcarus()")
			 GPSLaunchIcarusUI;


/////////////////
// Render Menu //
/////////////////

string $renderMenu = "MayaWindow|mainRenderMenu";
RenRenderMenu($renderMenu);

// Add GPS entries
setParent -menu $renderMenu;
	// GPS Render Submit
	menuItem -divider true
			 GPSRenderDivider1;

	menuItem -insertAfter GPSRenderDivider1
			 -label ("[GPS] Submit Render...")
			 -command ("source menus2Py; menus2Py.submitRender()")
			 -annotation ("Submit Render")
			 -image "gpsSubmitRender.png"
			 GPSSubmitRenderItem;


//////////////////////
// Time Slider Menu //
//////////////////////

string $timelineMenu = "TimeSliderMenu";
// string $timelineMenu = "";
// if ($maya_ver >= 2017) {
// 	//print ("Running version 2017 or higher\n");
// 	$timelineMenu = "TimeSlider|MainTimeSliderLayout|formLayout8|TimeSliderMenu"; // Maya 2017 and later
// } else {
// 	//print ("Running version 2016 or earlier\n");
// 	$timelineMenu = "MayaWindow|toolBar6|MainTimeSliderLayout|formLayout9|TimeSliderMenu"; // Maya 2016 and earlier
// };

updateTimeSliderMenu $timelineMenu;
//menu -exists $timelineMenu;
//string $timeline_menuItems[] = `menu -ia -q $timelineMenu`;

// Add GPS entries
setParent -menu $timelineMenu;
	// Replace the existing Playblast menu item with GPS Preview
	menuItem -edit
			 -label ("[GPS] Preview")
			 -command ("source menus2Py; menus2Py.gpsPreviewNoUI()")
			 -annotation ("GPS Preview")
			 -image "gpsPlayblast.png"
			 timeSliderPlayblastItem;
	menuItem -edit
			 -command ("source menus2Py; menus2Py.gpsPreview()")
			 -annotation ("Launch GPS Preview UI")
			 timeSliderPlayblastOptionItem;

// Delete existing menu items
//deleteUI -menuItem timeSliderPlayblastItem;

// Add GPS entries
// setParent -menu $timelineMenu;
// 	menuItem -divider true;
// 	menuItem -label ("[GPS] Preview...")
// 			 -command ("source menus2Py; menus2Py.gpsPreview()")
// 			 -annotation ("Launch GPS Preview")
// 			 -image "gpsPlayblast.png"
// 			 GPSPlayblastItem;


/////////////////////////
// Status Line Buttons //
/////////////////////////

setParent $gStatusLine;

int $iconHeight = 26;

// New Scene
iconTextButton -edit -image1 "newScene.png"
               -width $iconHeight -height $iconHeight
               -command ("source menus2Py; menus2Py.newScene()")
               -annotation "New scene"
               newSceneButton;

// Open Scene
iconTextButton -edit -image1 "openScene.png"
               -width $iconHeight -height $iconHeight
               -command ("source menus2Py; menus2Py.openScene()")
               -annotation "Open scene. Right click for recent files."
               openSceneButton;

// Create a popup menu for Recent Files on the Open Scene button
deleteUI -menu OpenSceneButtonRecentFileItems;
popupMenu -parent openSceneButton OpenSceneButtonRecentFileItems;
	menu -edit -postMenuCommand "source menus2Py; menus2Py.updateRecentFilesMenu(\"OpenSceneButtonRecentFileItems\")" OpenSceneButtonRecentFileItems;
setParent -menu ..;

// Save Scene
iconTextButton -edit -image1 "saveScene.png"
               -width $iconHeight -height $iconHeight
               -command ("source menus2Py; menus2Py.saveScene()")
               -annotation "Save scene"
               saveSceneButton;

// Create a popup menu on the Save button for Save As and Incremental Save
string $save_menu = `popupMenu -parent saveSceneButton`;
	menuItem -label "Incremental Save" -command "source menus2Py; menus2Py.incrementalSave()";
	menuItem -label "Save As..." -command "source menus2Py; menus2Py.saveSceneAs()";

// The following are new buttons added to the end of the status line toolbar...

// Rename Tools
iconTextButton -image1 "bulkRename.png"
               -width $iconHeight -height $iconHeight
               -command ("source menus2Py.mel;menus2Py.bulkRename()")
               -annotation "Advanced renaming of objects"
               bulkRenameButton;

// Common Editors
iconTextButton -image1 "editor.png"
               -width $iconHeight -height $iconHeight
               -annotation "Open commonly used editor windows"
               editorsButton;

// Add popup menu for common editors
string $editor_menu = `popupMenu -b 1 -p editorsButton`;
	if ($maya_ver >= 2017) {
		menuItem -label "Outliner" -c "OutlinerWindow";
	} else {
		// Custom dockable Outliner panel for Maya 2016 and earlier
		menuItem -label "Outliner" -c "source dev_dockOutliner;dev_dockOutliner()";
	};
	menuItem -label "Node Editor" -c "NodeEditorWindow";
	menuItem -divider true;
	menuItem -label "Hypershade" -c "HypershadeWindow";
	menuItem -label "UV Texture Editor" -c "TextureViewWindow";
	menuItem -divider true;
	menuItem -label "Graph Editor" -c "GraphEditor";
	menuItem -label "Dope Sheet" -c "DopeSheetEditor";

// Browse Project Directories
iconTextButton -image1 "browse.png"
               -width $iconHeight -height $iconHeight
               -annotation "Browse project directories"
               browseDirsButton;

// Create a menu on the browse dir button for different directories
string $browser_menu = `popupMenu -b 1 -p browseDirsButton`;
	menuItem -label "Browse scenes" -c "source menus2Py; menus2Py.browseScenes()";
	menuItem -label "Browse playblasts" -c "source menus2Py; menus2Py.browsePlayblasts()";
	menuItem -label "Browse renders" -c "source menus2Py; menus2Py.browseRenders()";
	menuItem -label "Browse sourceimages" -c "source menus2Py; menus2Py.browseSourceimages()";
	menuItem -label "Browse shot" -c "source menus2Py; menus2Py.browseShot()";
	menuItem -label "Browse job" -c "source menus2Py; menus2Py.browseJob()";

// Review
iconTextButton -image1 "review.png"
               -width $iconHeight -height $iconHeight
               -command ("source menus2Py; menus2Py.launchHieroPlayer;")
               -annotation "Launch review app"
               reviewButton;

// Create a menu on the review button for different review software
string $review_menu = `popupMenu -b 1 -p reviewButton`;
	menuItem -label "HieroPlayer" -c "source menus2Py; menus2Py.launchHieroPlayer";
	menuItem -label "djv_view" -c "source menus2Py; menus2Py.launchDjv";

// Open Production Board
iconTextButton -image1 "productionBoard.png"
               -width $iconHeight -height $iconHeight
               -command ("source menus2Py; menus2Py.launchProdBoard;")
               -annotation "Open the Production Board"
               launchProdBoardButton;

// Launch Icarus UI
iconTextButton -image1 "icarus.png"
               -width $iconHeight -height $iconHeight
               -command ("source menus2Py; menus2Py.launchIcarus()")
               -annotation "Launch Icarus UI"
               launchIcarusButton;

// Print current job and shot info
string $jobInfo = `getenv IC_JOB` + " - " + `getenv IC_SHOT`;
text -label "   ";
text -label $jobInfo -h 27;
setParent -menu ..;

// Swap Object Mode / Component Mode buttons (fix for Maya 2014 only)
if ($maya_ver == 2014) {
	formLayout -edit
	           -af selectBtnComponent right 0
	           -ac selectBtnObject right 0 selectBtnComponent
	           -ac selectBtnHierComb right 0 selectBtnObject
	           masksForm;
}
