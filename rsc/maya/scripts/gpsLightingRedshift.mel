// [GPS] gpsLightingRedshift.mel
//
// Mike Bonnington <mike.bonnington@gps-ldn.com>
// (c) 2016-2016 Gramercy Park Studios
//
// Redshift setup module.


// Attempt to load the Redshift plugin and set some defaults.
global proc gpsLightingRedshift.loadBaseSettings()
{
	if(`pluginInfo -q -l "redshift4maya"`)
		gpsLightingRedshift.loadSettings();
	else
		//loadPlugin -addCallback "gpsLightingRedshift.loadSettings" "redshift4maya";
		warning "Redshift plugin not loaded.";
}


// Set the render settings with some sensible defaults.
global proc gpsLightingRedshift.loadSettings()
{
	// Load common settings
	source gpsLighting.mel;
	gpsLighting.setCommonOptions();

	// Set Redshift as the current renderer (redshiftOptions node should be automatically generated by this command, but doesn't appear to be)
	setCurrentRenderer redshift;

	// Create the redshiftOptions node unless it already exists
	if(!`objExists "redshiftOptions"`)
	{
		createNode RedshiftOptions;
	}

	// Set format to EXR with ZIPS compression, 16-bit half float
	setAttr "redshiftOptions.imageFormat" 1;

	// Setup gamma for linear workflow, unless Maya Color Management is enabled
	if(!`colorManagementPrefs -q -cmEnabled`)
		setAttr "redshiftOptions.displayGammaValue" 2.2;

	// Set render test resolution
	//setTestResolutionVar(4);

	// Set max transparency

	// Set global max depth

	// Make grain animate
	setAttr "redshiftOptions.unifiedRandomizePattern" 1;

	// Tell Redshift to abort rendering on license failure - prevents watermarked images being output from unlicensed render farm nodes
	setAttr "redshiftOptions.abortOnLicenseFail" 1;

	print "\nRedshift defaults loaded.";
}
