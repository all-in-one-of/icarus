global proc shelf_GPS_Lighting () {

	shelfButton
		-enableCommandRepeat 1
		-enable 1
		-width 35
		-height 35
		-manage 1
		-visible 1
		-preventOverride 0
		-annotation "Set up VRay global settings" 
		-enableBackground 0
		-align "center" 
		-label "vRaySettings" 
		-labelOffset 0
		-font "tinyBoldLabelFont" 
		-overlayLabelColor 0.8 0.8 0.8 
		-overlayLabelBackColor 0 0 0 0.2 
		-image "vRaySettings.png" 
		-image1 "vRaySettings.png" 
		-style "iconOnly" 
		-marginWidth 1
		-marginHeight 1
		-command "source gpsLighting.mel;gpsLighting.loadBaseSettings();" 
		-sourceType "mel" 
		-commandRepeatable 1
		-flat 1
		-mi "Load Base Settings" ( "source gpsLighting.mel; gpsLighting.loadBaseSettings()" )
		-mi "Update Render Path" ( "source gpsLighting.mel; gpsLighting.setRenderPath()" )
		-mi "Open Framebuffer" ( "vray showVFB;" )
		-mi "Load Standard Elements" ( "import loadElements; loadElements.addStdElements()" )
		-mip 3
		-mi "Load Data Elements" ( "import loadElements; loadElements.addDataElements()" )
		-mip 4
		-mi "Add or update AOV / Render Pass selector to Maya Render View" ( "import gpsRenderViewSelectAOV; reload(gpsRenderViewSelectAOV); gpsRenderViewSelectAOV.selectAOV()" )
		-mip 5
	;
	shelfButton
		-enableCommandRepeat 1
		-enable 1
		-width 35
		-height 35
		-manage 1
		-visible 1
		-preventOverride 0
		-annotation "Gamma workflow tools" 
		-enableBackground 0
		-align "center" 
		-label "Gamma Tools" 
		-labelOffset 0
		-font "tinyBoldLabelFont" 
		-overlayLabelColor 0.8 0.8 0.8 
		-overlayLabelBackColor 0 0 0 0.2 
		-image "gammaTools.png" 
		-image1 "gammaTools.png" 
		-style "iconOnly" 
		-marginWidth 1
		-marginHeight 1
		-command "source gpsLighting.mel;gpsLighting.addVRayGamma();" 
		-sourceType "mel" 
		-commandRepeatable 1
		-flat 1
		-mi "Add VRay Gamma to Selected" ( "source gpsLighting.mel;gpsLighting.addVRayGamma();" )
		-mi "Remove VRay Gamma from Selected" ( "source gpsLighting.mel;gpsLighting.removeVRayGamma();" )
		-mi "Add VRay Allow Negative Colours to Selected" ( "source gpsLighting.mel;gpsLighting.addVRayNegCol();" )
		-mi "Remove VRay Allow Negative Colours from Selected" ( "source gpsLighting.mel;gpsLighting.removeVRayNegCol();" )
	;
	shelfButton
		-enableCommandRepeat 1
		-enable 1
		-width 35
		-height 35
		-manage 1
		-visible 1
		-preventOverride 0
		-annotation "Create VRay Shaders" 
		-enableBackground 0
		-align "center" 
		-label "vRayShaders" 
		-labelOffset 0
		-font "plainLabelFont" 
		-overlayLabelColor 0.8 0.8 0.8 
		-overlayLabelBackColor 0 0 0 0.2 
		-image "createShader.png" 
		-image1 "createShader.png" 
		-style "iconOnly" 
		-marginWidth 1
		-marginHeight 1
		-sourceType "mel" 
		-commandRepeatable 1
		-flat 1
		-mi "VRay Material" ( "source gpsLighting.mel;gpsLighting.createMaterial(\"VRayMtl\",\"vrayMaterial\")" )
		-mi "VRay Material 2 Sided" ( "source gpsLighting.mel;gpsLighting.createMaterial(\"VRayMtl2Sided\",\"vray2Sided\")" )
		-mi "VRay Material Wrapper" ( "source gpsLighting.mel;gpsLighting.createMaterial(\"VRayMtlWrapper\",\"wrapper\")" )
		-mi "VRay Skin Material" ( "source gpsLighting.mel;gpsLighting.createMaterial(\"VRaySkinMtl\",\"vraySkin\")" )
		-mi "VRay Light Material" ( "source gpsLighting.mel;gpsLighting.createMaterial(\"VRayLightMtl\",\"vrayLight\")" )
		-mi "VRay Car Paint" ( "source gpsLighting.mel;gpsLighting.createMaterial(\"VRayCarPaintMtl\",\"carPaint\")" )
		-mi "VRay Blend Material" ( "source gpsLighting.mel;gpsLighting.createMaterial(\"VRayBlendMtl\",\"vrayBlend\")" )
	;
	shelfButton
		-enableCommandRepeat 1
		-enable 1
		-width 35
		-height 35
		-manage 1
		-visible 1
		-preventOverride 0
		-annotation "Create VRay Lights" 
		-enableBackground 0
		-align "center" 
		-label "vRayLights" 
		-labelOffset 0
		-font "plainLabelFont" 
		-overlayLabelColor 0.8 0.8 0.8 
		-overlayLabelBackColor 0 0 0 0.2 
		-image "createLight.png" 
		-image1 "createLight.png" 
		-style "iconOnly" 
		-marginWidth 1
		-marginHeight 1
		-sourceType "mel" 
		-commandRepeatable 1
		-flat 1
		-mi "VRay Rect Light" ("import createVRayLights; createVRayLights.create('VRayLightRectShape', 'VRayLightRect')")
		-mip 0
		-mi "VRay Dome Light" ("import createVRayLights; createVRayLights.create('VRayLightDomeShape', 'VRayLightDome')")
		-mip 1
		-mi "VRay Sphere Light" ("import createVRayLights; createVRayLights.create('VRayLightSphereShape', 'VRayLightSphere')")
		-mip 2
		-mi "VRay IES Light" ("import createVRayLights; createVRayLights.create('VRayLightIESShape', 'VRayLightIES')")
		-mip 3
		-mi "VRay Sun" ("vrayCreateVRaySun;")
		-mi "Create Light Contribution Element" ("import createLightSelPass\ncreateLightSelPass.lightSelPass()")
		-mip 5
		;
	shelfButton
		-enableCommandRepeat 1
		-enable 1
		-width 35
		-height 35
		-manage 1
		-visible 1
		-preventOverride 0
		-annotation "Add VRay subdivision and displacement attributes" 
		-enableBackground 0
		-align "center" 
		-label "vraySubDsMulti" 
		-labelOffset 0
		-font "plainLabelFont" 
		-overlayLabelColor 0.8 0.8 0.8 
		-overlayLabelBackColor 0 0 0 0.2 
		-image "subDs.png" 
		-image1 "subDs.png" 
		-style "iconOnly" 
		-marginWidth 1
		-marginHeight 1
		-command "import vraySubDsMulti; vraySubDsMulti.subDivide(subDs = 4)" 
		-sourceType "python" 
		-commandRepeatable 1
		-flat 1
	;
	shelfButton
		-enableCommandRepeat 1
		-enable 1
		-width 35
		-height 35
		-manage 1
		-visible 1
		-preventOverride 0
		-annotation "Create Object IDs and Multimattes" 
		-enableBackground 0
		-align "center" 
		-label "Multimatte" 
		-labelOffset 0
		-font "tinyBoldLabelFont" 
		-overlayLabelColor 0.8 0.8 0.8 
		-overlayLabelBackColor 0 0 0 0.2 
		-image "createMultimattes.png" 
		-image1 "createMultimattes.png" 
		-style "iconOnly" 
		-marginWidth 1
		-marginHeight 1
		-sourceType "mel" 
		-commandRepeatable 1
		-flat 1
		-mi "Create Object ID Single" ( "import createMultimattes\ncreateMultimattes.objID(single=True)" )
		-mip 0
		-mi "Create Object ID Multiple" ( "import createMultimattes\ncreateMultimattes.objID(single=False)" )
		-mip 1
		-mi "Create Object Multimattes All" ( "import createMultimattes\ncreateMultimattes.objMultiMatte(all=True)" )
		-mip 2
		-mi "Create Object Multimattes Selection" ( "import createMultimattes\ncreateMultimattes.objMultiMatte(all=False)" )
		-mip 3
	;
	shelfButton
		-enableCommandRepeat 1
		-enable 1
		-width 35
		-height 35
		-manage 1
		-visible 1
		-preventOverride 0
		-annotation "Create shading networks for multi-tile textures" 
		-enableBackground 0
		-align "center" 
		-label "gpsCreateTiledTx" 
		-labelOffset 0
		-font "plainLabelFont" 
		-overlayLabelColor 0.8 0.8 0.8 
		-overlayLabelBackColor 0 0 0 0.2 
		-image "tiledTx.png" 
		-image1 "tiledTx.png" 
		-style "iconOnly" 
		-marginWidth 1
		-marginHeight 1
		-command "import gpsCreateTiledTx; gpsCreateTiledTx.gpsCreateTiledTx().UI()" 
		-sourceType "python" 
		-commandRepeatable 1
		-flat 1
	;
	shelfButton
		-enableCommandRepeat 1
		-enable 1
		-width 35
		-height 35
		-manage 1
		-visible 1
		-preventOverride 0
		-annotation "Create GPS Cameras"
		-enableBackground 0
		-align "center"
		-label "GPS Camera"
		-labelOffset 0
		-font "tinyBoldLabelFont"
		-overlayLabelColor 0.8 0.8 0.8
		-overlayLabelBackColor 0 0 0 0.2
		-image "gpsCamera.png"
		-image1 "gpsCamera.png"
		-style "iconOnly"
		-marginWidth 1
		-marginHeight 1
		-command "import gpsCreateCamera; gpsCreateCamera.gpsCreateCamera().UI()" 
		-sourceType "python"
		-commandRepeatable 1
		-flat 1
		-mi "Add Physical Settings" ( "import gpsCreateCamera; gpsCreateCamera.gpsCreateCamera().addPhysical()" )
		-mip 0
	;
	shelfButton
		-enableCommandRepeat 1
		-enable 1
		-width 35
		-height 35
		-manage 1
		-visible 1
		-preventOverride 0
		-annotation "Set test render resolution" 
		-enableBackground 0
		-align "center" 
		-label "setTestResolution"
		-labelOffset 0
		-font "tinyBoldLabelFont"
		-overlayLabelColor 0.8 0.8 0.8
		-overlayLabelBackColor 0 0 0 0.2
		-image "setTestResolution.png"
		-image1 "setTestResolution.png"
		-style "iconOnly" 
		-marginWidth 1
		-marginHeight 1
		-command "setTestResolutionVar(1);" 
		-sourceType "mel" 
		-commandRepeatable 1
		-flat 1
		-mi "From Render Settings" ( "setTestResolutionVar(1);" )
		-mi "10% Settings" ( "setTestResolutionVar(2);" )
		-mi "25% Settings" ( "setTestResolutionVar(3);" )
		-mi "50% Settings" ( "setTestResolutionVar(4);" )
		-mi "75% Settings" ( "setTestResolutionVar(5);" )
		-mi "110% Settings" ( "setTestResolutionVar(6);" )
		-mi "125% Settings" ( "setTestResolutionVar(7);" )
		-mi "150% Settings" ( "setTestResolutionVar(8);" )
	;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Submit render job to Deadline" 
        -enableBackground 0
        -align "center" 
        -label "Submit Deadline render" 
        -labelOffset 0
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "submitToDeadline.png" 
        -image1 "submitToDeadline.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "source gpsSubmitDeadlineRender; SubmitJobToDeadline()" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
	shelfButton
		-enableCommandRepeat 1
		-enable 1
		-width 35
		-height 35
		-manage 1
		-visible 1
		-preventOverride 0
		-annotation "Submit command-line (local) render job" 
		-enableBackground 0
		-align "center" 
		-label "gpsSubmitRender" 
		-labelOffset 0
		-font "plainLabelFont" 
		-overlayLabelColor 0.8 0.8 0.8 
		-overlayLabelBackColor 0 0 0 0.2 
		-image "gpsSubmitRender.png" 
		-image1 "gpsSubmitRender.png" 
		-style "iconOnly" 
		-marginWidth 1
		-marginHeight 1
		-command "import gpsSubmitRender; gpsSubmitRender.gpsSubmitRender().UI()" 
		-sourceType "python" 
		-commandRepeatable 1
		-flat 1
	;

}
